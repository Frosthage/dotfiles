- hosts: localhost
  vars:
    packages:
      - vim
      - git
      - python3
      - python3-pip
      - zsh
      - curl
      - nodejs
      - npm
      - virtualenv
      - pavucontrol
      - i3
      - ubuntu-drivers-common
      - golang
      - neovim
      - ca-certificates
      - curl
      - gnupg

  tasks:
    - name: Install prerequisite packages
      become: yes
      apt:
        name: "{{ packages }}"

    - name: Install clipboard-cli package globally
      become: yes
      npm:
        name: clipboard-cli
        global: yes

    - name: Autoinstall ubuntu drivers
      become: yes
      command: ubuntu-drivers autoinstall

    - name: Print HOME variable
      debug:
        var: ansible_env.HOME

    - name: Confirm .oh-my-zsh directory's existence
      stat:
        path: "{{ ansible_env.HOME }}/.oh-my-zsh"
      register: oh_my_zsh_dir

    - name: Install Oh My Zsh
      shell: sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)" && exit
      args:
        executable: /bin/bash
      when: not oh_my_zsh_dir.stat.exists

    - name: Install Rust
      shell: curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
      args:
        creates: "$HOME/.cargo/bin/rustc"

    - name: Install Powerlevel10k theme for Oh My ZSH
      git:
        repo: 'https://github.com/romkatv/powerlevel10k.git'
        dest: "{{ ansible_env.HOME }}/.oh-my-zsh/themes/powerlevel10k"
        update: no

    - name: Set ZSH theme to powerlevel10k
      lineinfile:
        path: "{{ ansible_env.HOME }}/.zshrc"
        regexp: '^ZSH_THEME'
        line: 'ZSH_THEME="powerlevel10k/powerlevel10k"'

    - name: Create font directories
      file:
        path: "{{ item }}"
        state: directory
      loop:
        - "{{ ansible_env.HOME }}/.local/share/fonts"
        - "{{ ansible_env.HOME }}/.config/fontconfig/conf.d"

    - name: Download Meslo Nerd Font
      get_url:
        url: https://github.com/romkatv/powerlevel10k-media/raw/master/MesloLGS%20NF%20Regular.ttf
        dest: "{{ ansible_env.HOME }}/.local/share/fonts/MesloLGS%20NF%20Regular.ttf"

    - name: Update font cache
      command: fc-cache -fv

    - name: Import Microsoft's GPG key
      get_url:
        url: https://packages.microsoft.com/keys/microsoft.asc
        dest: /tmp/microsoft.gpg
        mode: '0644'

    - name: Move key to trusted.gpg.d
      command: cp /tmp/microsoft.gpg /etc/apt/trusted.gpg.d/microsoft.gpg
      become: yes

    - name: Add Microsoft's VS Code repository
      become: true
      apt_repository:
        repo: deb [arch=amd64] https://packages.microsoft.com/repos/vscode stable main
        state: present

    - name: Install Visual Studio Code
      apt:
        name: code
        state: present
        update_cache: yes

    - name: Create necessary directory for keyring
      ansible.builtin.file:
        path: /etc/apt/keyrings
        state: directory
        mode: '0755'

    - name: Download Docker's official GPG key
      get_url:
        url: https://download.docker.com/linux/ubuntu/gpg
        dest: /tmp/docker.gpg

    - name: Deamor Docker gpg key
      shell: gpg --dearmor -o /etc/apt/keyrings/docker.gpg /tmp/docker.gpg
      args:
        creates: /etc/apt/keyrings/docker.gpg

    - name: Change keyring file permissions
      ansible.builtin.file:
        path: /etc/apt/keyrings/docker.gpg
        mode: '0644'

    - name: Set up Docker repository
      ansible.builtin.shell:
        cmd: >-
          echo "deb [arch=\"$(dpkg --print-architecture)\" signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null

    - name: Install Docker and related packages
      ansible.builtin.apt:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-buildx-plugin
          - docker-compose-plugin
        update_cache: yes
        state: present
      become: true

    









